import React, { useState } from 'react';
import { View, Text, FlatList, TouchableOpacity } from 'react-native';
import { useRouter } from 'expo-router';
import { styles } from './styles';

// Define a interface para representar os itens cadastrados
interface Item {
  id: string;
  tipoResiduo: string;
  descricao: string;
  quantidade: string;
  formaDescarte: string;
  tipoEntrega: string;
}

const MyItens = () => {
  // Estado com dados est√°ticos para visualiza√ß√£o; futuramente, voc√™ integrar√° com os dados reais do back end
  const [items, setItems] = useState<Item[]>([
    {
      id: '1',
      tipoResiduo: 'Papel',
      descricao: 'Papel√£o recicl√°vel de escrit√≥rio',
      quantidade: '80',
      formaDescarte: 'Reciclagem',
      tipoEntrega: 'Troca',
    },
    {
      id: '2',
      tipoResiduo: 'Metal',
      descricao: 'Sucata met√°lica',
      quantidade: '30',
      formaDescarte: 'Descarte',
      tipoEntrega: 'Venda',
    },
  ]);

  const router = useRouter();

  // FUN√á√ÉO: Para tratar o clique no bot√£o de editar item  
  // Aqui voc√™ implementar√° a l√≥gica para editar o item selecionado
  const handleEdit = (itemId: string) => {
    console.log(`Editar item ${itemId}`);
    // Exemplo: router.push(`/editItem/${itemId}`);
  };

  // FUN√á√ÉO: Para tratar o clique no bot√£o de excluir item  
  // Aqui voc√™ implementar√° a l√≥gica para excluir o item selecionado, com confirma√ß√£o se necess√°rio
  const handleDelete = (itemId: string) => {
    console.log(`Excluir item ${itemId}`);
    // Futuro: Implementar confirma√ß√£o e exclus√£o do item
  };

  return (
    // CONTAINER PRINCIPAL DA TELA "MY ITENS"
    <View style={styles.container}>
      {/* Cabe√ßalho da tela */}
      <Text style={styles.header}>Meus Itens</Text>
      
      {/* LISTA DE CARDS DOS ITENS */}
      {items.length > 0 ? (
        <FlatList
          data={items}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            // Cada card √© estruturado em duas partes:
            // 1. Conte√∫do do item (lado esquerdo)
            // 2. A√ß√µes: bot√µes para editar e excluir (lado direito)
            <View style={styles.card}>
              <View style={styles.cardContent}>
                <Text style={styles.cardTitle}>{item.tipoResiduo}</Text>
                <Text style={styles.cardDescription}>{item.descricao}</Text>
                <Text style={styles.cardInfo}>Quantidade: {item.quantidade}</Text>
                <Text style={styles.cardInfo}>Forma de Descarte: {item.formaDescarte}</Text>
                <Text style={styles.cardInfo}>Tipo de Entrega: {item.tipoEntrega}</Text>
              </View>
              
              {/* AREA DAS A√á√ïES: Bot√µes de Editar e Excluir */}
              <View style={styles.cardActions}>
                <TouchableOpacity onPress={() => handleEdit(item.id)} style={styles.actionButton}>
                  {/* √çcone de l√°pis para Editar (pode ser substitu√≠do por um √≠cone de biblioteca no futuro) */}
                  <Text style={styles.actionText}>‚úèÔ∏è</Text>
                </TouchableOpacity>
                <TouchableOpacity onPress={() => handleDelete(item.id)} style={styles.actionButton}>
                  {/* √çcone de lixeira para Excluir */}
                  <Text style={styles.actionText}>üóëÔ∏è</Text>
                </TouchableOpacity>
              </View>
            </View>
          )}
        />
      ) : (
        // MENSAGEM EXIBIDA QUANDO N√ÉO HOUVER ITENS CADASTRADOS
        <Text style={styles.emptyMessage}>
          Voc√™ ainda n√£o cadastrou nenhum item.
        </Text>
      )}
    </View>
  );
};

export default MyItens;
